#!/usr/bin/env ruby
# assumes has rubygems loaded...since we need the sane gem
require 'os'
if !OS.jruby?
  $stderr.puts 'jruby only for now, you can request a change to this, exiting...'
  exit 1
end
require File.dirname(__FILE__) + "/../lib/simple_gui_creator.rb"

class TestWindow < ParseTemplate::JFramer

  def initialize
    super
    string = <<-EOL
          ---------- Simple Ruby Gui Creator Test Window ---------------------------
          | "Edit this, then..."                                                    |
          | [Test it out! :create_button]                                           |
          | [      :text_area_to_use, width=70chars, height=500, font=fixed_width]  |
          | [                                                                    ]  |
          | [                                                                    ]  |
          | [                                                                    ]  |
          | [                                                                    ]  |
          | [                                                                    ]  |
          | [                                                                    ]  |
          | [                                                                    ]  |
          |                                                                         |
          | [Show code snippet :create_snippet]                                     |
          --------------------------------------------------------------------------
    EOL
	Kernel.print string
	parse_setup_string string
	elements[:text_area_to_use].text=string
    elements[:create_button].on_clicked {
	  ParseTemplate::JFramer.new.parse_setup_string elements[:text_area_to_use].text
	}
	elements[:create_snippet].on_clicked {
	  code = create_snippet_from_current
	  
	  display_frame = ParseTemplate::JFramer.new.parse_setup_string <<-EOL
        "Here's your snippet!"
        [:code,width=500,height=400]
        [                          ]
        [                          ]
        "Here's your template:"
        [:template_text,width=500,height=400,font=fixed_width]
        [                                                    ]
        [Save Both files:save_all]
	  EOL
	  display_frame.elements[:code].text = code
	  template_text = elements[:text_area_to_use].text
	  display_frame.elements[:template_text].text = template_text
	  
	  display_frame.elements[:save_all].on_clicked { 
	    dir = SimpleGuiCreator.new_existing_dir_chooser_and_go "Pick directory to save both files to:"
		File.write(dir + '/my_window.template', elements[:text_area_to_use].text)
		File.write(dir + '/my_window.rb', create_snippet_from_current)
		
	  }
	}
  end  
  
  def create_snippet_from_current
      # create a demo frame, so I can then pull elements from it
      fake_frame = ParseTemplate::JFramer.new.parse_setup_string elements[:text_area_to_use].text
	  fake_frame.close
	  
	  element_code = ""
      fake_frame.elements.each{|e| 
        if e[1].is_a? Java::JavaxSwing::JButton
	      element_code += "    elements[:#{e[0]}].on_clicked { puts 'clicked #{e[0]}' }\n"
	    else
		  element_code += "    #{e[0]}_current_text = elements[:#{e[0]}]\n"
		end
      }	  
      code=<<-END_CODE
	  
require 'simple_gui_creator.rb'

class MyWindow < ParseTemplate::JFramer
  def initialize
    super
    parse_setup_filename 'my_window.template' # create this file first
	
#{element_code}
  end
  
end
MyWindow.new

     END_CODE
	 code
  end
  
end

TestWindow.new
